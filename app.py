import streamlit as st
import pandas as pd
from model import run_prediction
import matplotlib.pyplot as plt
import io
import base64

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–æ–∫—É—é –∫–æ–º–ø–æ–Ω–æ–≤–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã Streamlit
st.set_page_config(layout="wide")

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞: –∏–∫–æ–Ω–∫–∞ —Å–∞–º–æ–ª–µ—Ç–∞ –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
st.title("‚úàÔ∏è –ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–æ–µ –¢–û —Å–∏—Å—Ç–µ–º—ã ECS")

st.markdown("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö `ecs_data.xlsx` (—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã ECS).")

# –í–∏–¥–∂–µ—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ Excel-—Ñ–∞–π–ª", type=["xlsx"])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ Matplotlib —Ñ–∏–≥—É—Ä—ã –≤ base64 —Å—Ç—Ä–æ–∫—É –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –≤ HTML
def fig_to_base64(fig):
    buf = io.BytesIO()
    fig.savefig(buf, format="png", bbox_inches="tight", dpi=300)
    buf.seek(0)
    img_base64 = base64.b64encode(buf.read()).decode('utf-8')
    plt.close(fig) # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∏–≥—É—Ä—É, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–∞–º—è—Ç—å
    return f'<img src="data:image/png;base64,{img_base64}" style="max-width: 100%; height: auto; display: block; margin: 10px auto;">'

# –ï—Å–ª–∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω
if uploaded_file:
    try:
        df = pd.read_excel(uploaded_file)
        st.success("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
        if st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ"):
            # –û—á–∏—â–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º
            plt.close('all') 
            
            # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ run_prediction –∏–∑ model.py.
            # –¢–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–µ–º 8 –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:
            result_df, fig_roc, fig_temp, fig_dtemp, status, fig_shap, classification_report_str, roc_auc_str = run_prediction(df)

            st.subheader("üìã –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ:")
            st.info(status) 

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ DataFrame —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –Ω–µ –ø—É—Å—Ç–æ–π, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –æ—Ç—á–µ—Ç—ã
            if not result_df.empty: 
                st.subheader("üìä ROC-–∫—Ä–∏–≤–∞—è")
                st.pyplot(fig_roc) 

                st.subheader("üí° –í–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ (SHAP Values)") 
                st.pyplot(fig_shap) 

                st.subheader("üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ PACK —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –æ—Ç–∫–∞–∑–∞–º–∏")
                st.pyplot(fig_temp) 

                st.subheader("üìà –ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã PACK (dTemp) —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –æ—Ç–∫–∞–∑–∞–º–∏")
                st.pyplot(fig_dtemp) 

                # --- –°–æ–∑–¥–∞–Ω–∏–µ HTML-–æ—Ç—á–µ—Ç–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ---
                html_report_content = f"""
                <!DOCTYPE html>
                <html lang="ru">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>–û—Ç—á–µ—Ç –ø–æ –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–æ–º—É –¢–û —Å–∏—Å—Ç–µ–º—ã ECS</title>
                    <style>
                        body {{ font-family: 'Inter', sans-serif; line-height: 1.6; color: #333; margin: 20px; background-color: #f4f4f4; }}
                        .container {{ max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }}
                        h1, h2, h3 {{ color: #0056b3; }}
                        .status-box {{ padding: 15px; margin: 20px 0; border-radius: 8px; font-weight: bold; }}
                        .status-red {{ background-color: #ffe0e0; border: 1px solid #ff4d4d; color: #ff4d4d; }}
                        .status-yellow {{ background-color: #fffbe0; border: 1px solid #ffd700; color: #ffd700; }}
                        .status-green {{ background-color: #e0ffe0; border: 1px solid #4CAF50; color: #4CAF50; }}
                        table {{ width: 100%; border-collapse: collapse; margin-top: 20px; }}
                        th, td {{ border: 1px solid #ddd; padding: 8px; text-align: left; }}
                        th {{ background-color: #f2f2f2; }}
                        pre {{ background-color: #eee; padding: 10px; border-radius: 5px; overflow-x: auto; }}
                        .section {{ margin-bottom: 30px; border-bottom: 1px solid #eee; padding-bottom: 20px; }}
                        .section:last-child {{ border-bottom: none; }}
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>‚úàÔ∏è –û—Ç—á–µ—Ç –ø–æ –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–æ–º—É –¢–û —Å–∏—Å—Ç–µ–º—ã ECS</h1>
                        <p>–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {pd.Timestamp.now().strftime('%Y-%m-%d %H:%M:%S')}</p>

                        <div class="section">
                            <h2>–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ</h2>
                            <div class="status-box {'status-red' if 'üî¥' in status else 'status-yellow' if 'üü°' in status else 'status-green'}">
                                {status}
                            </div>
                        </div>

                        <div class="section">
                            <h2>–ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏</h2>
                            <h3>–û—Ç—á–µ—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏</h3>
                            {classification_report_str}
                            <p>{roc_auc_str}</p>
                        </div>
                        
                        <div class="section">
                            <h2>–ì—Ä–∞—Ñ–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∞</h2>
                            <h3>ROC-–∫—Ä–∏–≤–∞—è</h3>
                            {fig_to_base64(fig_roc)}
                            
                            <h3>–í–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ (SHAP Values)</h3>
                            {fig_to_base64(fig_shap)}

                            <h3>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ PACK —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –æ—Ç–∫–∞–∑–∞–º–∏</h3>
                            {fig_to_base64(fig_temp)}

                            <h3>–ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã PACK (dTemp) —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –æ—Ç–∫–∞–∑–∞–º–∏</h3>
                            {fig_to_base64(fig_dtemp)}
                        </div>

                        <div class="section">
                            <h2>–î–µ—Ç–∞–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π</h2>
                            <h3>–¢–∞–±–ª–∏—Ü–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π (–ø–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫)</h3>
                            {result_df.head(20).to_html(index=False)}
                            <p><i>–û—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –ø–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞. –ü–æ–ª–Ω—ã–π DataFrame –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ CSV.</i></p>
                        </div>

                    </div>
                </body>
                </html>
                """
                
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ HTML-–æ—Ç—á–µ—Ç–∞
                st.download_button(
                    "üì• –°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç (HTML)",
                    html_report_content.encode('utf-8'),
                    file_name="ecs_predictive_maintenance_report.html",
                    mime="text/html"
                )

                # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è CSV —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                st.download_button(
                    "üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ (CSV)",
                    result_df.to_csv(index=False).encode('utf-8'),
                    file_name="ecs_prediction_result.csv",
                    mime="text/csv"
                )

    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∏–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã
        st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª `ecs_data.xlsx` –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏.")
        st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª `ecs_data.xlsx` –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏.")

